  <para>
    &lzt; defines a series of commonly redefined macros and definitions.
    By using the definitions located here there is no need to create your own 
    therefore reducing complexity and increasing reuse.  However just to make 
    sure that there are no collisions all of the definitions used here are wrapped
    in a #ifndef makeing it easier for them to be redifined if the need arises.
  </para>
  <sect1 id="zt-definitions">
    <title>Definitions</title>
    <para>
    </para>
    <variablelist>
      <varlistentry><term><constant>NULL</constant></term>
	<listitem>
	  <para>defined as ((void *) 0)</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>FALSE</constant></term>
	<listitem>
	  <para>defined as (0)</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>TRUE</constant></term>
	<listitem>
	  <para>defined as (!FALSE)</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>WHITESPACE</constant></term>
	<listitem>
	  <para>defined as " \t"</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>PATH_SEPERATOR</constant></term>
	<listitem>
	  <para>defined as '/'</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>ENV_SEPERATOR</constant></term>
	<listitem>
	  <para>defined as ':'</para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para></para>
    <para>The GnuC specific definitions __FUNCTION__ and __PRETTY_FUNCTION__ are defined as empty an string ("") when not using GnuC.</para>
    <para>If __GNUC__ is defined as greater then or equal to 2.4 then then definitions bellow are defined as follows otherwise they are defined as empty.</para>
    <variablelist>
      <varlistentry><term><constant>NORETURN</constant></term>
	<listitem>
	  <para>defined as __attribute__((noreturn))</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>UNUSED</constant></term>
	<listitem>
	  <para>defined as __attribute__((unused))</para>
	</listitem>
      </varlistentry>
      <varlistentry><term><constant>INLINE</constant></term>
	<listitem>
	  <para>defined as __attribute__((inline))</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 id="zt-macros">
    <title>Macros</title>
    <para>
    </para>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>ABS</function></funcdef>
	<paramdef><parameter>x</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to the absolute value of x.
      </funcsynopsisinfo>
    </funcsynopsis>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>CLAMP</function></funcdef>
	<paramdef><parameter>x</parameter></paramdef>
	<paramdef><parameter>low</parameter></paramdef>
	<paramdef><parameter>high</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to x limited to low and high values.
      </funcsynopsisinfo>
    </funcsynopsis>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>MAX</function></funcdef>
	<paramdef><parameter>a</parameter></paramdef>
	<paramdef><parameter>b</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to the larger of a and b.
      </funcsynopsisinfo>
    </funcsynopsis>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>MIN</function></funcdef>
	<paramdef><parameter>a</parameter></paramdef>
	<paramdef><parameter>b</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to the smaller of a and b.
      </funcsynopsisinfo>
    </funcsynopsis>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>sizeof_array</function></funcdef>
	<paramdef><parameter>a</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to the sizeof a given array.
      </funcsynopsisinfo>
    </funcsynopsis>
    <funcsynopsis>
      <funcprototype>
	<funcdef><function>endof_array</function></funcdef>
	<paramdef><parameter>a</parameter></paramdef>
      </funcprototype>
      <funcsynopsisinfo>
	Expands to a pointer to the last element in an array.
      </funcsynopsisinfo>
    </funcsynopsis>
  </sect1>

<!-- keep this comment at the end of the file
Local Variables: 
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:("libzt.sgml" "")
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->