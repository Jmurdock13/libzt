dnl configure.in source file; run autoconf to create configure script

AC_REVISION($Revision: 1.5 $)dnl this revision of this configure.in
AC_PREREQ(2.13)
AC_INIT(libzt)
AM_CONFIG_HEADER(config.h)
AC_CONFIG_SRCDIR(libzt/Makefile.am)
AC_CONFIG_AUX_DIR(aux_files)

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(libzt, 1.0.0, jshiffer@zerotao.org)


dnl AM_MAINTAINER_MODE
dnl AM_DISABLE_SHARED
dnl AM_DISABLE_STATIC
dnl AC_LIBLTDL_INSALLABLE
dnl AC_LIBTOOL_DLOPEN
dnl AC_LIBLTDL_CONVENIENCE

AC_PROG_CC

dnl Add -Wall if gcc
if test "$GCC" = "yes"; then
   dnl -Werror
   CFLAGS="-Wall -Wcast-align -Wno-uninitialized -Wformat-security -fkeep-inline-functions -fno-strict-aliasing"
fi

AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AM_PROG_LIBTOOL

case $host in
	*-*-darwin*)
		CFLAGS="$CFLAGS -no-cpp-precomp -flat_namespace "
	;;
esac

dnl Because recent automake complains about AS, set it here.
CCAS="$CC"
AC_SUBST(CCAS)

dnl Because recent automake complains about CCASFLAGS, set it here.
CCASFLAGS='$(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)'
AC_SUBST(CCASFLAGS)

dnl Checks for libraries.
dnl AC_CHECK_LIB(foo, foo_init)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(strings.h, break)
AC_CHECK_HEADERS(errno.h assert.h syslog.h)
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_HEADERS(stdbool.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T

AC_TRY_COMPILE(,[long long i;],
		AC_DEFINE(HAVE_LONG_LONG, 1, [Define if C compiler supports long long type])
        CFLAGS="$CFLAGS -DHAVE_LONG_LONG")

AC_TRY_COMPILE(,[long double d;],
		AC_DEFINE(HAVE_LONG_DOUBLE, 1, [Define if C compiler supports long double type]))

AC_TYPE_INT64_T
AC_TYPE_UINT64_T
AC_TYPE_INT32_T
AC_TYPE_UINT32_T
AC_TYPE_INT16_T
AC_TYPE_UINT16_T
AC_TYPE_INT8_T
AC_TYPE_UINT8_T

AC_CHECK_TYPE(bool, [], [], [[#include <stdbool.h>]])

# AC_CHECK_TYPE(u_int64_t, unsigned long long)
# AC_CHECK_TYPE(u_int32_t, unsigned long)
# AC_CHECK_TYPE(u_int16_t, unsigned short)
# AC_CHECK_TYPE(u_int8_t, unsigned char)

dnl Checks for library functions.
AC_CHECK_FUNCS(bzero memset break)
AC_CHECK_FUNCS(calloc strchr strrchr strdup)
AC_CHECK_FUNCS(getopt_long)

dnl replace functions missing in the local libraries
dnl you need to add the replacement in replace/FUNCTION.c
AC_REPLACE_FUNCS(basename vsyslog)

AC_MSG_CHECKING(for basename in string.h)
AC_EGREP_HEADER(basename, string.h, zt_cv_func_basename=yes, zt_cv_func_basename=no)
AC_MSG_RESULT($zt_cv_func_basename)

AC_MSG_CHECKING(for swapcontext in ucontext.h)
AC_EGREP_HEADER(swapcontext, ucontext.h, zt_cv_func_ucontext=yes, zt_cv_func_ucontext=no)
AC_MSG_RESULT($zt_cv_func_ucontext)

AC_MSG_CHECKING(for vsyslog in syslog.h)
AC_EGREP_HEADER(vsyslog, syslog.h, zt_cv_func_vsyslog=yes , zt_cv_func_vsyslog=no)
AC_MSG_RESULT($zt_cv_func_vsyslog)

AC_MSG_CHECKING(for sys_errlist in sdtio.h)
AC_EGREP_HEADER(sys_errlist, stdio.h, AC_DEFINE(HAS_SYS_ERRLIST, [], [extern char **sys_errlist]) AC_MSG_RESULT(yes), AC_MSG_RESULT(no) )

AM_WITH_DMALLOC

AC_WITH_PEDANTIC
AC_WITH_OPTFLAGS
AC_WITH_DEBUG
AC_WITH_DIST_RELEASE
AC_WITH_PROFILING
AC_WITH_COVERAGE

AC_OUTPUT_COMMANDS([
  if test -n "$CONFIG_FILES" && test -n "$CONFIG_HEADERS"; then
    # If both these vars are non-empty, then config.status wasn't run by
    # automake rules (which always set one or the other to empty).
    CONFIG_OTHER=${CONFIG_OTHER-${common_dir}/zt_common.h}
  fi

  case "$CONFIG_OTHER" in
  *${common_dir}/zt_common.h*)
    outfile=${common_dir}/zt_common.h
    stampfile=${common_dir}/stamp-common
    tmpfile=${outfile}T
    dirname="sed s,^.*/,,g"
    upper="tr 'a-z' 'A-Z'"

    echo creating $outfile
    cat > $tmpfile << _EOF_
/*  -*- Mode: C -*-
 * --------------------------------------------------------------------
 * DO NOT EDIT THIS FILE!  It has been automatically generated
 * from:    configure.in and `echo $outfile|$dirname`.in
 * on host: `(hostname || uname -n) 2>/dev/null | sed 1q`
 * --------------------------------------------------------------------
 */

#ifndef `echo $common_dir|$dirname|$upper`_COMMON_H
#define `echo $common_dir|$dirname|$upper`_COMMON_H 1

#include <stdio.h>
#include <sys/types.h>

_EOF_

    # Add the code to include these headers only if autoconf has
    # shown them to be present.

# stdlib.h
    if test x$ac_cv_header_stdlib_h = xyes; then
      echo '#include <stdlib.h>' >> $tmpfile
    fi

# unistd.h
    if test x$ac_cv_header_unistd_h = xyes; then
      echo '#include <unistd.h>' >> $tmpfile
    fi

# sys/wait.h
    if test x$ac_cv_header_sys_wait_h = xyes; then
      echo '#include <sys/wait.h>' >> $tmpfile
    fi

# errno.h
    if test x$ac_cv_header_errno_h = xyes; then
      echo '#include <errno.h>' >> $tmpfile
      echo '#ifndef errno' >> $tmpfile
      echo '  /*Some systems #define this! */' >> $tmpfile
      echo '  extern int errno;' >> $tmpfile
      echo '#endif' >> $tmpfile
    fi

# limits.h
    if test x$ac_cv_header_limits_h = xyes; then
      echo '#include <limits.h>' >> $tmpfile
    fi

    echo '#ifndef PATH_MAX' >> $tmpfile
    echo '# define PATH_MAX 1024' >> $tmpfile
    echo '#endif' >> $tmpfile

# stdint.h
    if test x$ac_cv_header_stdint_h = xyes; then
      echo '#include <stdint.h>' >> $tmpfile
    else
      echo '#error No stdint available' >> $tmpfile
    fi

# stdbool
    if test x$ac_cv_header_stdbool_h = xyes; then
        echo '#include <stdbool.h>' >> $tmpfile
    else
        if test x$ac_cv_type_bool == xno; then
            echo 'typedef bool unsigned char;' >> $tmpfile
            echo '#undef true' >> $tmpfile
            echo '#define true (bool)1' >> $tmpfile
            echo '#undef false' >> $tmpfile
            echo '#define false (bool)0' >> $tmpfile
        fi
    fi

# string/strings.h
    if test x$ac_cv_header_strings_h = xyes; then
      echo '#include <strings.h>' >> $tmpfile
    elif test x$ac_cv_header_string_h = xyes; then
      echo '#include <string.h>' >> $tmpfile
    fi

# bzero/memset
    if test x$ac_cv_func_bzero = xno && test x$ac_cv_func_memset = xyes; then
      echo '#define bzero(buf, bytes) ((void) memset (buf, 0, bytes))' >> $tmpfile
    fi

# strchr
    if test x$ac_cv_func_strchr = xno; then
      echo '#define strchr index' >> $tmpfile
    fi

# strrchr
    if test x$ac_cv_func_strrchr = xno; then
      echo '#define strrchr rindex' >> $tmpfile
    fi

# get everything from common_h.in
# The ugly but portable cpp stuff comes from here
    infile=$srcdir/$common_dir/`echo $outfile | sed 's,.*/,,g;s,\..*$,,g'`_h.in
    if test -f $infile; then
      sed '/^##.*$/d' $infile >> $tmpfile
    fi

# Anything that needs to go into a C_DECLS
    ${RM-/bin/rm -f} ${tmpfile}2 2>/dev/null

# basename
    if test x$ac_cv_func_basename = xno || test x$zt_cv_func_basename = xno; then
      echo 'extern char *basename (const char *path);' >> ${tmpfile}2
    fi

# vsyslog
    if test x$ac_cv_func_vsyslog = xno || test x$zt_cv_func_vsyslog = xno; then
      echo '#include <stdarg.h>' >> ${tmpfile}2
      echo 'extern void vsyslog (int, char *, va_list);' >> ${tmpfile}2
    fi

# strcspn
    if test x$ac_cv_func_strcspn = xno; then
      echo 'extern size_t strcspn (const char *string, const char *accept);' >> ${tmpfile}2
    fi

# strerror
    if test x$ac_cv_func_strerror = xno; then
      echo 'extern char *strerror (int err);' >> ${tmpfile}2
    fi

# strsignal
    if test x$ac_cv_func_strsignal = xno; then
      echo 'extern char *strsignal (int signo);' >> ${tmpfile}2
    fi

# strspn
    if test x$ac_cv_func_strspn = xno; then
      echo 'extern size_t strspn (const char *string, const char *reject);' >> ${tmpfile}2
    fi

# vfprintf
    if test x$ac_cv_func_vfprintf = xno; then
      echo 'extern int vfprintf (FILE *file, const char *format, va_list ap);' >> ${tmpfile}2
    fi

# waitpid
    if test x$ac_cv_func_waitpid = xno; then
      echo 'extern pid_t waitpid (pid_t pid, int *pstatus, int options);' >> ${tmpfile}2
    fi

# end tests
    if test -f ${tmpfile}2; then
      echo 'BEGIN_C_DECLS' >> $tmpfile
      cat ${tmpfile}2 >> $tmpfile
      echo 'END_C_DECLS' >> $tmpfile
      ${RM-/bin/rm -f} ${tmpfile}2 2>/dev/null
    fi

    cat >> $tmpfile << _EOF_
#endif /* `echo $common_dir|$dirname|$upper`_ZT_COMMON_H */
_EOF_

    if cmp -s $tmpfile $outfile; then
      echo $outfile is unchanged
      rm -f $tmpfile
    else
      mv $tmpfile $outfile
      touch $stampfile
    fi
    ;;
  esac
],[
  srcdir=$srcdir
  common_dir=libzt
# functions
  zt_cv_func_basename=$zt_cv_func_basename
  zt_cv_func_vsyslog=$zt_cv_func_vsyslog
  ac_cv_func_basename=$ac_cv_func_basename
  ac_cv_func_vsyslog=$ac_cv_func_vsyslog
  ac_cv_func_bzero=$ac_cv_func_bzero
  ac_cv_func_memset=$ac_cv_func_memset
  ac_cv_func_strchr=$ac_cv_func_strchr
  ac_cv_func_strrchr=$ac_cv_func_strrchr
  ac_cv_func_strcspn=$ac_cv_func_strcspn
  ac_cv_func_strerror=$ac_cv_func_strerror
  ac_cv_func_strsignal=$ac_cv_func_strsignal
  ac_cv_func_strspn=$ac_cv_func_strspn
  ac_cv_func_vfprintf=$ac_cv_func_vfprintf
  ac_cv_func_waitpid=$ac_cv_func_waitpid

# headers
  ac_cv_header_assert_h=$ac_cv_header_assert_h
  ac_cv_header_errno_h=$ac_cv_header_errno_h
  ac_cv_header_limits_h=$ac_cv_header_limits_h
  ac_cv_header_stdint_h=$ac_cv_header_stdint_h
  ac_cv_header_stdbool_h=$ac_cv_header_stdbool_h
  ac_cv_header_stdlib_h=$ac_cv_header_stdlib_h
  ac_cv_header_stdarg_h=$ac_cv_header_stdarg_h
  ac_cv_header_string_h=$ac_cv_header_string_h
  ac_cv_header_strings_h=$ac_cv_header_strings_h
  ac_cv_header_sys_wait_h=$ac_cv_header_sys_wait_h
  ac_cv_header_unistd_h=$ac_cv_header_unistd_h
  ac_cv_header_varargs_h=$ac_cv_header_varargs_h

  ac_cv_sizeof_char=$ac_cv_sizeof_char
  ac_cv_sizeof_short=$ac_cv_sizeof_short
  ac_cv_sizeof_int=$ac_cv_sizeof_int
  ac_cv_sizeof_long=$ac_cv_sizeof_long
  ac_cv_sizeof_long_long=$ac_cv_sizeof_long_long

  ac_cv_type_bool=$ac_cv_type_bool
  ac_cv_type_uint64_t=$ac_cv_type_uint64_t
  ac_cv_type_int64_t=$ac_cv_type_int64_t
  ac_cv_type_uint32_t=$ac_cv_type_uint32_t
  ac_cv_type_int32_t=$ac_cv_type_int32_t
  ac_cv_type_uint16_t=$ac_cv_type_uint16_t
  ac_cv_type_int16_t=$ac_cv_type_int16_t
  ac_cv_type_uint8_t=$ac_cv_type_uint8_t
  ac_cv_type_int8_t=$ac_cv_type_int8_t

])

m4_pattern_allow(LIBOBJS)dnl
dnl this is needed in order for REPLACE_FUNCS to work with libtool
LTLIBOBJS=`echo "$LIBOBJS"|sed 's,\.o ,.lo ,g;s,\.o$,.lo,'`
dnl LTLIBOBJS=`echo X"$LIBOBJS" | sed 's,^X,,;s,\.[^.]* ,.lo ,g;s,\.[^.]*$,.lo,'`

echo $LTLIBOBJS
AC_SUBST(LTLIBOBJS)
AC_SUBST(ac_aux_dir)

AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

AC_OUTPUT(
Makefile
replace/Makefile
doc/Makefile
libzt/Makefile
libzt/zt_log/Makefile
libzt/zt_cfg/Makefile
libzt/adt/Makefile
tools/Makefile
tools/libzt.pc
examples/Makefile
tests/Makefile
)

echo
echo
echo \
"------------------------------------------------------------------------
Configuration:

  Source code location:   ${srcdir}
  Compiler:               ${CC}
  Compiler flags:         ${CFLAGS} ${WARN_CFLAGS}
  Linker flags:           ${LDFLAGS}

  -- System --

  Host System Type:       ${host}
  Install path:	          ${prefix}

  See config.h for further configuration information.
------------------------------------------------------------------------"

